.dropdown#periodSelectDropdown
  %button.btn.btn-secondary.periodSelectDropdownToggler{"data-dropdown-toggle" => "periodSelectDropdownMenu", type: "button"}
    = set_period_dropdown(@period)
    = inline_svg_tag "icons/dropdown.svg"
  #periodSelectDropdownMenu.dropdown-menu.hidden.text-left
    .dropdown-item
      %a{ href: url_for(sortable_search_params.merge(period: "all")), class: ("active" if @period == "all"), data: { period: "all" } }
        All Time
    .dropdown-item
      %a{ href: url_for(sortable_search_params.merge(period: "hour")), class: ("active" if @period == "hour"), data: { period: "hour" } }
        %span.d-none.d-md-inline-block Past
        hour
    .dropdown-item
      %a{ href: url_for(sortable_search_params.merge(period: "day")), class: ("active" if @period == "day"), data: { period: "day" } }
        %span.d-none.d-md-inline-block Past
        day
    .dropdown-item
      %a{ href: url_for(sortable_search_params.merge(period: "week")), class: ("active" if @period == "week"), data: { period: "week" } }
        %span.d-none.d-md-inline-block Past
        seven days
    .dropdown-item
      %a{ href: url_for(sortable_search_params.merge(period: "month")), class: ("active" if @period == "month"), data: { period: "month" } }
        %span.d-none.d-md-inline-block Past
        thirty days
    .dropdown-item
      %a{ href: url_for(sortable_search_params.merge(period: "year")), class: ("active" if @period == "year"), data: { period: "year" } }
        %span.d-none.d-md-inline-block Past
        year
    .dropdown-item
      %a#showDateField{ href: "", class: ("active" if @period == "custom"), data: { period: "custom" }}
        Custom date range

%form#dropdownCustomSelectionForm
  = hidden_field_tag :start_time_selector, (@period == "custom" ? @start_time : Date.today).strftime("%Y-%m-%d")
  = hidden_field_tag :end_time_selector, (@period == "custom" ? @end_time : Date.today).strftime("%Y-%m-%d")
  %input#customPeriodSelectDatePicker.hidden{type: "text"}
